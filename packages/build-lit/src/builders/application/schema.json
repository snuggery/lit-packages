{
	"$schema": "http://json-schema.org/draft-07/schema",
	"type": "object",
	"properties": {
		"entryPoints": {
			"oneOf": [
				{
					"type": "array",
					"items": {"type": "string"},
					"additionalItems": false
				},
				{
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"in": {"type": "string"},
							"out": {"type": "string"}
						},
						"additionalProperties": false
					},
					"additionalItems": false
				},
				{
					"type": "object",
					"additionalProperties": {"type": "string"}
				}
			],
			"description": "List of entry-points to build"
		},
		"outdir": {
			"type": "string",
			"description": "The output directory"
		},
		"outbase": {
			"type": "string",
			"description": "The base path used to determine entry point output paths, defaults to the deepest folder containing all entry-points"
		},
		"tsconfig": {
			"type": "string",
			"description": "Typescript configuration file"
		},
		"banner": {
			"type": "object",
			"properties": {
				"css": {"type": "string"},
				"js": {"type": "string"}
			},
			"additionalProperties": false,
			"description": "Text to be prepended to each output file of type T where T is one of: css | js"
		},
		"footer": {
			"type": "object",
			"properties": {
				"css": {"type": "string"},
				"js": {"type": "string"}
			},
			"additionalProperties": false,
			"description": "Text to be appended to each output file of type T where T is one of: css | js"
		},
		"inject": {
			"type": "array",
			"items": {"type": "string"},
			"additionalItems": false,
			"description": "Import the file F into all input files and automatically replace matching globals with imports"
		},
		"target": {
			"oneOf": [
				{"type": "string"},
				{
					"type": "array",
					"items": {"type": "string"},
					"additionalItems": false
				}
			],
			"description": "Environment target(s) (e.g. es2017, chrome58, firefox57, safari11, edge16, node10, ie9, opera45, esnext) (default: es2022)"
		},
		"minify": {
			"type": "boolean",
			"description": "Whether to minify the application"
		},
		"baseHref": {
			"oneOf": [
				{
					"type": "string"
				},
				{
					"type": "object",
					"additionalProperties": {"type": "string"}
				}
			],
			"description": "Base URL for the application being built, can be an object passing a base URL per locale"
		},
		"deployUrl": {
			"type": "string",
			"description": "Path where the application is deployed"
		},
		"localize": {
			"oneOf": [
				{
					"type": "string"
				},
				{
					"type": "array",
					"items": {"type": "string"},
					"additionalItems": false
				}
			],
			"description": "Locale or locales in which to translate the application"
		},
		"conditions": {
			"type": "array",
			"items": {"type": "string"},
			"additionalItems": false,
			"description": "Custom conditions to include during resolution"
		},
		"metafile": {
			"type": "boolean",
			"description": "Write metadata about the build to a JSON file (see also: https://esbuild.github.io/analyze/)"
		},
		"inlineLitDecorators": {
			"type": "boolean",
			"description": "Replace lit's decorators with other, equivalent but smaller, syntax. This flag requires typescript and the tsconfig option to be set"
		}
	},
	"required": ["entryPoints"],
	"additionalProperties": false
}
