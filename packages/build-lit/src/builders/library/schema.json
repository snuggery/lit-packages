{
	"$schema": "http://json-schema.org/draft-07/schema",
	"type": "object",
	"properties": {
		"assets": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"include": {
						"oneOf": [
							{"type": "string"},
							{
								"type": "array",
								"items": {"type": "string"},
								"additionalItems": false
							}
						],
						"description": "Globs to include in the asset, relative to `from`"
					},
					"exclude": {
						"oneOf": [
							{"type": "string"},
							{
								"type": "array",
								"items": {"type": "string"},
								"additionalItems": false
							}
						],
						"description": "Globs to exclude, relative to `from`"
					},
					"from": {
						"type": "string",
						"description": "The path to include the assets from, defaults to the root of the active project"
					},
					"to": {
						"type": "string",
						"description": "The path to write the assets to, defaults to the folder the package is being built into"
					},
					"allowEmpty": {
						"type": "boolean",
						"description": "Return a successful result if no matching files were found",
						"default": "false"
					}
				},
				"additionalProperties": false,
				"required": ["include"]
			},
			"additionalItems": false
		},
		"clean": {
			"type": "boolean",
			"description": "Whether to remove the output directory before building"
		},
		"manifest": {
			"type": "string",
			"description": "Path to the `package.json` file, defaults to `package.json` in the project root"
		},
		"outdir": {
			"type": "string",
			"description": "The output directory"
		},
		"tsconfig": {
			"oneOf": [{"type": "null"}, {"type": "string"}],
			"description": "Typescript configuration file"
		},
		"banner": {
			"type": "object",
			"properties": {
				"css": {"type": "string"},
				"js": {"type": "string"}
			},
			"additionalProperties": false,
			"description": "Text to be prepended to each output file of type T where T is one of: css | js"
		},
		"footer": {
			"type": "object",
			"properties": {
				"css": {"type": "string"},
				"js": {"type": "string"}
			},
			"additionalProperties": false,
			"description": "Text to be appended to each output file of type T where T is one of: css | js"
		},
		"inject": {
			"type": "array",
			"items": {"type": "string"},
			"additionalItems": false,
			"description": "Import the file F into all input files and automatically replace matching globals with imports"
		},
		"target": {
			"oneOf": [
				{"type": "string"},
				{
					"type": "array",
					"items": {"type": "string"},
					"additionalItems": false
				}
			],
			"description": "Environment target(s) (e.g. es2017, chrome58, firefox57, safari11, edge16, node10, ie9, opera45, esnext) (default: es2022)"
		},
		"conditions": {
			"type": "array",
			"items": {"type": "string"},
			"additionalItems": false,
			"description": "Custom conditions to include during resolution"
		},
		"metafile": {
			"type": "boolean",
			"description": "Write metadata about the build to a JSON file (see also: https://esbuild.github.io/analyze/)"
		},
		"inlineLitDecorators": {
			"type": "boolean",
			"description": "Replace lit's decorators with other, equivalent but smaller, syntax. This flag requires typescript and the tsconfig option to be set"
		}
	},
	"additionalProperties": false
}
